<script>
Array.prototype.clone = function() {
    return this.slice(0);
};
Array.prototype.remove = function(start, end) {
  this.splice(start, end);
  return this;
}
var dataController = JSON.parse('<%= raw @data_type_expense%>');
var removed=[],inChart = [];
inChart = dataController.clone();


$(function () {
    function sortData(dataUnorder){
        console.log(dataUnorder)
        dataOrder = []
        for (var typeExpenses in dataController){
          dataOrder.push([typeExpenses, dataController[typeExpenses].value,dataController[typeExpenses].name])
        }
        dataOrder.sort(function(a, b) {return b[1] - a[1]})
        return dataOrder;
    }
    function createChart(dataUnorder){
        sortData(dataUnorder).forEach(function (obj){
            //console.log(obj);
            $("#listChange ul").append("<li class='inChart'>"+obj[2]+"</li>");
        });
    }
    createChart(dataController);
    drawChart(dataController);
    $("#listChange ul li").click(function(){
    	contentRemove = $(this)[0].innerHTML;
        var node = $(this);
    	dataController.forEach(function(element){
    		console.log(removed.indexOf(element) == -1);              
            if ( contentRemove === element.name ){
                if( removed.indexOf(element) == -1 ){
                    removed.push(element);
                    inChart.remove(inChart.indexOf(element),1);
                    node.addClass("notInChart");
                    node.removeClass("inChart");
                }else{
                    node.addClass("inChart");
                    node.removeClass("notInChart");
                    inChart.push(element);
                    removed.remove(removed.indexOf(element),1);
                }                
            }
    	});
    	drawChart(inChart);
    });

    function drawChart(datas){
    	console.log(datas);
        $('#treemapchart').empty();
        $('#treemapchart').highcharts({
            colorAxis: {
                minColor: '#FFFFFF',
                maxColor: '#FF7600'//Highcharts.getOptions().colors[0]
            },
            series: [{
                type: "treemap",
                layoutAlgorithm: 'squarified',
                data: datas
            }],
            title: {
                text: 'Gastos por federação'
            }
        });
    }

});

$(document).ready(function(){
    var real_expense = '<%= raw @expense_type_find %>';
    
    if( real_expense != 0 ){
        $('.msg_error').remove();
    }else{
        setTimeout(function(){
            $('.msg_error').remove();
        }, 5000);
    }
 });

</script>
<!--Message that's show every messages of erro.-->
<% flash.each do |name, msg| %>
    <div class="msg_error">
        <i class="fa fa-warning"></i>
        <%= msg %>
    </div>
<% end %>
<div id="combobox">

<div id="buttontype">
<%= form_tag  filter_type_expense_path , method: 'get' do %>
     <%= hidden_field_tag :year, "Todos" %>
     <%= hidden_field_tag :month, "Todos" %>
    <%= submit_tag 'Todos' %>
<% end %>
</div>
<div id="select_box">
<%= form_tag  filter_type_expense_path , method: 'get' do %>
     <!-- <%= hidden_field_tag :id, params[:id]%> -->
     <%= select_tag :year, options_for_select([["2015"],["2014"],["2013"],["2012"],["2011"]]) %>
     <%= select_tag :month, options_for_select([["Todos"],["Janeiro"],["Fevereiro"],["Março"],["Abril"],["Maio"],["Junho"],["Julho"],["Agosto"],["Setembro"],["Outubro"],["Novembro"],["Dezembro"]])%>
    <%= submit_tag 'Filtrar' %>
<% end %>

</div>
</div>

<div id="treemapchart"></div><div id="listChange"><ul></ul></div>